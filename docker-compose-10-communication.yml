networks:
  communication:
    name: basys-communication
    internal: false
  proxy:
    name: basys-proxy
    external: true

volumes:
  zookeeper-data:
    driver: local
  zookeeper-log:
    driver: local
  kafka-data:
    driver: local
  emqx-data:
    driver: local

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.15
    hostname: zookeeper
    container_name: zookeeper
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log
    ports:
      - "2181:2181"
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - communication

  kafka:
    image: confluentinc/cp-kafka:6.2.15
    hostname: kafka
    container_name: kafka
    volumes:
      - kafka-data:/var/lib/kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    restart: always
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://${EXTERNAL_HOSTNAME}:9092
      #KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_LOG_RETENTION_HOURS: 72
    networks:
      - communication

  schema-registry:
    image: confluentinc/cp-schema-registry:6.2.15
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    restart: always
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    networks:
      - communication

  rest-proxy:
    image: confluentinc/cp-kafka-rest:6.2.15
    depends_on:
      - kafka
      - schema-registry
    ports:
      - 8082:8082
    restart: always
    hostname: rest-proxy
    container_name: rest-proxy
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: 'kafka:29092'
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      KAFKA_REST_CONSUMER_INSTANCE_TIMEOUT_MS: 30000
      KAFKA_REST_CONSUMER_REQUEST_TIMEOUT_MS: 20
    logging:
      driver: "json-file"
      options:
        max-size: "128m"
    networks:
      - communication    

  akhq:
    image: tchiotludo/akhq:0.25.0
    container_name: akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:29092"
              schema-registry:
                url: "http://schema-registry:8081"
#              connect:
#                - name: "connect"
#                  url: "http://connect:8083"
      VIRTUAL_HOST: akhq.${EXTERNAL_HOSTNAME}
      VIRTUAL_PORT: 8080
    ports:
      - 8086:8080
    restart: always
    depends_on:
      - kafka
      - schema-registry
    networks:
      - communication
      - proxy

  emqx:
    container_name: emqx
    image: emqx/emqx:4.4.19
    environment:
      - EMQX_NAME=emqx
      - EMQX_HOST=127.0.0.1
      - EMQX_ADMIN_PASSWORD=test123
      - EMQX_LOADED_PLUGINS="emqx_recon,emqx_retainer,emqx_management,emqx_dashboard,emqx_auth_clientid"
      - EMQX_RETAINER__STORAGE_TYPE=disc
      - VIRTUAL_HOST=emqx.${EXTERNAL_HOSTNAME}
      - VIRTUAL_PORT=18083
    volumes:
      - emqx-data:/opt/emqx/data
    ports:
      - '1883:1883'
      - '8883:8883'
      - '8083:8083'
      - '8084:8084'
      - '18083:18083'
    restart: always
    networks:
      - communication
      - proxy

  service-registry:
    image: dfkibasys/service-registry:latest
    container_name: service-registry
    environment:
      - VIRTUAL_HOST=serviceregistry.${EXTERNAL_HOSTNAME}
      - VIRTUAL_PORT=8761
    ports:
      - "8761:8761"
    restart: always
    networks:
      - communication
      - proxy
